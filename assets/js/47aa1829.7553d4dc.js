"use strict";(self.webpackChunkmcp_docs=self.webpackChunkmcp_docs||[]).push([[6346],{6530:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"introduction/why-mcp","title":"Why MCP? Why API-first and OpenAPI Matter","description":"Discover why the Model Context Protocol (MCP) is essential for API-first development with OpenAPI. Learn how it simplifies integration, enhances interoperability, and future-proofs your stack.","source":"@site/docs/1-introduction/why-mcp.md","sourceDirName":"1-introduction","slug":"/introduction/why-mcp","permalink":"/introduction/why-mcp","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Why MCP?","sidebar_class_name":"orange","title":"Why MCP? Why API-first and OpenAPI Matter","description":"Discover why the Model Context Protocol (MCP) is essential for API-first development with OpenAPI. Learn how it simplifies integration, enhances interoperability, and future-proofs your stack.","keywords":["MCP","Model Context Protocol","OpenAPI","API-first","interoperability"],"author":"La Rebelion Labs","publisher":"MCP Project","dateModified":"2025-07-27"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/overview"},"next":{"title":"Use Cases","permalink":"/introduction/use-cases"}}');var r=n(4848),o=n(8453);const s={sidebar_position:2,sidebar_label:"Why MCP?",sidebar_class_name:"orange",title:"Why MCP? Why API-first and OpenAPI Matter",description:"Discover why the Model Context Protocol (MCP) is essential for API-first development with OpenAPI. Learn how it simplifies integration, enhances interoperability, and future-proofs your stack.",keywords:["MCP","Model Context Protocol","OpenAPI","API-first","interoperability"],author:"La Rebelion Labs",publisher:"MCP Project",dateModified:"2025-07-27"},a="Why MCP? Why API-first and OpenAPI Matter",l={},c=[{value:"Why Choose <em>Headless API</em> for MCP?",id:"why-choose-headless-api-for-mcp",level:2},{value:"Example: Integration Without MCP",id:"example-integration-without-mcp",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Further Reading",id:"further-reading",level:2}];function d(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"why-mcp-why-api-first-and-openapi-matter",children:"Why MCP? Why API-first and OpenAPI Matter"})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsx)(t.p,{children:"API-first design and MCP reduces integration pain and future-proofs your stack."})}),"\n",(0,r.jsxs)(t.h2,{id:"why-choose-headless-api-for-mcp",children:["Why Choose ",(0,r.jsx)(t.em,{children:"Headless API"})," for MCP?"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Interoperability:"})," APIs and context models are standardized, making integration easy"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Rapid iteration:"})," Update your OpenAPI spec and ship new features fast"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Context management:"})," Built-in support for memory, personalization, and orchestration"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Future-proof:"})," Build on widely adopted standards, ensuring compatibility with existing tools and ecosystems while avoiding reliance on proprietary solutions"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"example-integration-without-mcp",children:"Example: Integration Without MCP"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:'"We spent time integrating with a partner because we had to build custom connectors. With MCP and OpenAPI, this pain disappears."'}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Always update your OpenAPI spec before making code changes, code to the spec, not the implementation"}),"\n",(0,r.jsx)(t.li,{children:"Use context to enable smarter, more adaptive workflows"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://swagger.io/resources/articles/adopting-an-api-first-approach/",children:"Why API-first?"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://rebelion.la/you-dont-need-to-implement-mcp-servers-a-contract-first-approach-to-ai-tool-integration",children:"Don't Implement MCP Servers: A Contract-First Approach to AI Tool Integration"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(6540);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);