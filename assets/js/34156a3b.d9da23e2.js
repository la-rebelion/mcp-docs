"use strict";(self.webpackChunkmcp_docs=self.webpackChunkmcp_docs||[]).push([[2944],{414:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"examples/fullstack-example","title":"Fullstack Example: MCP, OpenAPI, API-first","description":"A fullstack example using MCP, OpenAPI, and API-first design. Shows both backend (Node.js/Express) and frontend (React) integration.","source":"@site/docs/4-examples/fullstack-example.md","sourceDirName":"4-examples","slug":"/examples/fullstack-example","permalink":"/examples/fullstack-example","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Fullstack Example","sidebar_class_name":"orange","title":"Fullstack Example: MCP, OpenAPI, API-first","description":"A fullstack example using MCP, OpenAPI, and API-first design. Shows both backend (Node.js/Express) and frontend (React) integration.","keywords":["MCP","fullstack","OpenAPI","API-first","example","frontend","backend","React","Express"],"author":"La Rebelion","publisher":"MCP Project","dateModified":"2025-07-27"},"sidebar":"tutorialSidebar","previous":{"title":"Quick Demo","permalink":"/examples/quick-demo"},"next":{"title":"Agent Integration","permalink":"/examples/agent-integration"}}');var s=t(4848),r=t(8453);const i={sidebar_position:2,sidebar_label:"Fullstack Example",sidebar_class_name:"orange",title:"Fullstack Example: MCP, OpenAPI, API-first",description:"A fullstack example using MCP, OpenAPI, and API-first design. Shows both backend (Node.js/Express) and frontend (React) integration.",keywords:["MCP","fullstack","OpenAPI","API-first","example","frontend","backend","React","Express"],author:"La Rebelion",publisher:"MCP Project",dateModified:"2025-07-27"},l="Fullstack Example: MCP, OpenAPI, API-first",o={},c=[{value:"1. Backend OpenAPI Schema",id:"1-backend-openapi-schema",level:2},{value:"2. Backend Implementation (Express)",id:"2-backend-implementation-express",level:2},{value:"3. Frontend Example (React)",id:"3-frontend-example-react",level:2},{value:"Further Reading",id:"further-reading",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"fullstack-example-mcp-openapi-api-first",children:"Fullstack Example: MCP, OpenAPI, API-first"})}),"\n",(0,s.jsx)(n.p,{children:"This example demonstrates a simple fullstack MCP app:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Backend:"})," Node.js/Express with OpenAPI contract"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Frontend:"})," React app calling the backend API"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"1-backend-openapi-schema",children:"1. Backend OpenAPI Schema"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"openapi: 3.1.0\ninfo:\n  title: Fullstack Example API\n  version: 1.0.0\npaths:\n  /greet:\n    get:\n      summary: Get greeting\n      operationId: getGreeting\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Greeting\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n"})}),"\n",(0,s.jsx)(n.h2,{id:"2-backend-implementation-express",children:"2. Backend Implementation (Express)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const express = require('express');\nconst app = express();\napp.get('/greet', (req, res) => {\n  const name = req.query.name || 'World';\n  res.json({ message: `Hello, ${name}!` });\n});\napp.listen(3001, () => console.log('API running on port 3001'));\n"})}),"\n",(0,s.jsx)(n.h2,{id:"3-frontend-example-react",children:"3. Frontend Example (React)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import React, { useState } from 'react';\nexport default function Greet() {\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const greet = async () => {\n    const res = await fetch(`/greet?name=${name}`);\n    const data = await res.json();\n    setMessage(data.message);\n  };\n  return (\n    <div>\n      <input value={name} onChange={e => setName(e.target.value)} placeholder=\"Your name\" />\n      <button onClick={greet}>Greet</button>\n      <div>{message}</div>\n    </div>\n  );\n}\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"You can extend this example with authentication, context, or more endpoints as your app grows."})}),"\n",(0,s.jsx)(n.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://swagger.io/specification/",children:"OpenAPI Specification"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/la-rebelion",children:"Model Context Protocol (MCP)"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var a=t(6540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);