"use strict";(self.webpackChunkmcp_docs=self.webpackChunkmcp_docs||[]).push([[4900],{7918:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"components/hapi-server/grpc-idl/index","title":"Protobuf Integration in HAPI Server: API-first with MCP","description":"Explore how HAPI server uses Protobuf (gRPC) specifications to power API-first development, dynamic RPC generation, and seamless Model Context Protocol (MCP) integration.","source":"@site/docs/3-components/hapi-server/grpc-idl/index.md","sourceDirName":"3-components/hapi-server/grpc-idl","slug":"/components/hapi-server/grpc-idl/","permalink":"/components/hapi-server/grpc-idl/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Protobuf Integration","sidebar_class_name":"orange","title":"Protobuf Integration in HAPI Server: API-first with MCP","description":"Explore how HAPI server uses Protobuf (gRPC) specifications to power API-first development, dynamic RPC generation, and seamless Model Context Protocol (MCP) integration.","keywords":["Protobuf","gRPC","HAPI server","API-first","Model Context Protocol","MCP"],"author":"La Rebelion Labs","publisher":"MCP Project","dateModified":"2025-07-27","badges":[{"type":"beta","description":"Protobuf/gRPC support is in beta"},{"type":"roadmap","description":"Features coming soon","color":null}]},"sidebar":"tutorialSidebar","previous":{"title":"Validation Layers","permalink":"/components/hapi-server/openapi/validation-layers"},"next":{"title":"Schema Design (gRPC)","permalink":"/components/hapi-server/grpc-idl/schema-design"}}');var r=n(4848),i=n(8453);const s={sidebar_position:2,sidebar_label:"Protobuf Integration",sidebar_class_name:"orange",title:"Protobuf Integration in HAPI Server: API-first with MCP",description:"Explore how HAPI server uses Protobuf (gRPC) specifications to power API-first development, dynamic RPC generation, and seamless Model Context Protocol (MCP) integration.",keywords:["Protobuf","gRPC","HAPI server","API-first","Model Context Protocol","MCP"],author:"La Rebelion Labs",publisher:"MCP Project",dateModified:"2025-07-27",badges:[{type:"beta",description:"Protobuf/gRPC support is in beta"},{type:"roadmap",description:"Features coming soon",color:null}]},a="Protobuf Integration in HAPI Server: API-first with MCP",l={},c=[{value:"Why Protobuf/gRPC?",id:"why-protobufgrpc",level:2},{value:"How HAPI Uses Your Protobuf Schema",id:"how-hapi-uses-your-protobuf-schema",level:2},{value:"Example: Adding a Custom Tool Operation",id:"example-adding-a-custom-tool-operation",level:3},{value:"Example: Enabling Security",id:"example-enabling-security",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Further Reading",id:"further-reading",level:2}];function d(e){const o={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.header,{children:(0,r.jsx)(o.h1,{id:"protobuf-integration-in-hapi-server-api-first-with-mcp",children:"Protobuf Integration in HAPI Server: API-first with MCP"})}),"\n",(0,r.jsx)(o.p,{children:"HAPI server is built around Protocol Buffers (protobuf) and gRPC specifications. This enables you to define your API contract once and let HAPI generate, validate, and document all RPCs automatically."}),"\n",(0,r.jsx)(o.h2,{id:"why-protobufgrpc",children:"Why Protobuf/gRPC?"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Single source of truth:"})," Your protobuf spec defines messages, services, and RPCs."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Automatic validation:"})," Every request and response is checked against the schema."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Live documentation:"})," HAPI can auto-generate docs and code from your proto files."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Easier integration:"})," Tools and agents can introspect and use the API contract programmatically."]}),"\n"]}),"\n",(0,r.jsx)(o.admonition,{type:"tip",children:(0,r.jsx)(o.p,{children:"Use protobuf options and extensions to add custom metadata for HAPI-specific features or MCP context."})}),"\n",(0,r.jsx)(o.h2,{id:"how-hapi-uses-your-protobuf-schema",children:"How HAPI Uses Your Protobuf Schema"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"RPC generation:"})," Each service and method in your proto becomes a live RPC endpoint."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Validation:"})," Messages and responses are validated using the schema."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Security:"})," Use gRPC metadata and MCP context for authentication and authorization."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Custom extensions:"})," Add options for advanced routing, context, or tool integration."]}),"\n"]}),"\n",(0,r.jsx)(o.h3,{id:"example-adding-a-custom-tool-operation",children:"Example: Adding a Custom Tool Operation"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-proto",children:"service WeatherService {\n  rpc GetWeather (WeatherRequest) returns (WeatherResponse) {\n    option (mcp.tool) = true;\n  }\n}\n"})}),"\n",(0,r.jsx)(o.h3,{id:"example-enabling-security",children:"Example: Enabling Security"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-proto",children:"// Use gRPC metadata for OAuth2 tokens or API keys\n"})}),"\n",(0,r.jsx)(o.admonition,{type:"caution",children:(0,r.jsx)(o.p,{children:"Always define unique method names for each RPC. This helps HAPI and MCP agents map actions to code and tools reliably."})}),"\n",(0,r.jsx)(o.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsx)(o.li,{children:"Keep your proto files up to date with your implementation."}),"\n",(0,r.jsx)(o.li,{children:"Use protobuf extensions for custom logic or context (e.g., MCP integration)."}),"\n",(0,r.jsx)(o.li,{children:"Leverage gRPC's built-in security and validation features for robust APIs."}),"\n"]}),"\n",(0,r.jsx)(o.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsx)(o.li,{children:(0,r.jsx)(o.a,{href:"https://protobuf.dev/programming-guides/proto3/",children:"Protocol Buffers Language Guide"})}),"\n",(0,r.jsx)(o.li,{children:(0,r.jsx)(o.a,{href:"https://github.com/la-rebelion/hapi-mcp",children:"HAPI MCP source code"})}),"\n",(0,r.jsx)(o.li,{children:(0,r.jsx)(o.a,{href:"https://github.com/la-rebelion",children:"Model Context Protocol (MCP)"})}),"\n"]})]})}function p(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>a});var t=n(6540);const r={},i=t.createContext(r);function s(e){const o=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:o},e.children)}}}]);