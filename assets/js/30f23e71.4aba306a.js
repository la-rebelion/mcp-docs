"use strict";(self.webpackChunkmcp_docs=self.webpackChunkmcp_docs||[]).push([[7322],{2429:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"components/chatmcp/memory-context","title":"Memory & Context: ChatMCP, MCP, OpenAPI","description":"How ChatMCP manages memory and context using MCP and OpenAPI.","source":"@site/docs/3-components/chatmcp/memory-context.md","sourceDirName":"3-components/chatmcp","slug":"/components/chatmcp/memory-context","permalink":"/components/chatmcp/memory-context","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"Memory & Context","sidebar_class_name":"green","title":"Memory & Context: ChatMCP, MCP, OpenAPI","description":"How ChatMCP manages memory and context using MCP and OpenAPI.","keywords":["ChatMCP","memory management","context management","OpenAPI","Model Context Protocol","MCP"],"author":"La Rebelion Labs","publisher":"MCP Project","dateModified":"2025-07-27"},"sidebar":"tutorialSidebar","previous":{"title":"Chat Flow Design","permalink":"/components/chatmcp/chat-flow-design"},"next":{"title":"Integrating with HAPI","permalink":"/components/chatmcp/integrating-with-hapi"}}');var a=n(4848),r=n(8453);const s={sidebar_position:3,sidebar_label:"Memory & Context",sidebar_class_name:"green",title:"Memory & Context: ChatMCP, MCP, OpenAPI",description:"How ChatMCP manages memory and context using MCP and OpenAPI.",keywords:["ChatMCP","memory management","context management","OpenAPI","Model Context Protocol","MCP"],author:"La Rebelion Labs",publisher:"MCP Project",dateModified:"2025-07-27"},c="Memory & Context: ChatMCP, MCP, OpenAPI",i={},m=[];function p(e){const t={h1:"h1",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"memory--context-chatmcp-mcp-openapi",children:"Memory & Context: ChatMCP, MCP, OpenAPI"})}),"\n",(0,a.jsx)(t.p,{children:"How ChatMCP manages memory and context using MCP and OpenAPI."}),"\n",(0,a.jsx)(t.p,{children:"WIP: This section is a work in progress and will be updated with more details soon."})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var o=n(6540);const a={},r=o.createContext(a);function s(e){const t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);