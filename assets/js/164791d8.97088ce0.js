"use strict";(self.webpackChunkmcp_docs=self.webpackChunkmcp_docs||[]).push([[5235],{7447:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"examples/agent-integration","title":"Agent Integration: MCP, OpenAPI, API-first","description":"How to integrate agents with MCP using OpenAPI and API-first principles. Includes code, hooks, and best practices.","source":"@site/docs/4-examples/agent-integration.md","sourceDirName":"4-examples","slug":"/examples/agent-integration","permalink":"/examples/agent-integration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"Agent Integration","sidebar_class_name":"green","title":"Agent Integration: MCP, OpenAPI, API-first","description":"How to integrate agents with MCP using OpenAPI and API-first principles. Includes code, hooks, and best practices.","keywords":["MCP","agent integration","OpenAPI","API-first","example","agent","orchestration","developer experience"],"author":"La Rebelion Labs","publisher":"MCP Project","dateModified":"2025-07-27"},"sidebar":"tutorialSidebar","previous":{"title":"Fullstack Example","permalink":"/examples/fullstack-example"},"next":{"title":"Serverless Deploy","permalink":"/examples/serverless-deploy"}}');var i=t(4848),s=t(8453);const o={sidebar_position:3,sidebar_label:"Agent Integration",sidebar_class_name:"green",title:"Agent Integration: MCP, OpenAPI, API-first",description:"How to integrate agents with MCP using OpenAPI and API-first principles. Includes code, hooks, and best practices.",keywords:["MCP","agent integration","OpenAPI","API-first","example","agent","orchestration","developer experience"],author:"La Rebelion Labs",publisher:"MCP Project",dateModified:"2025-07-27"},r="Agent Integration: MCP, OpenAPI, API-first",c={},l=[{value:"1. OpenAPI Schema for Agent",id:"1-openapi-schema-for-agent",level:2},{value:"2. Agent Code Example (Node.js)",id:"2-agent-code-example-nodejs",level:2},{value:"3. API Handler Example",id:"3-api-handler-example",level:2},{value:"Further Reading",id:"further-reading",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"agent-integration-mcp-openapi-api-first",children:"Agent Integration: MCP, OpenAPI, API-first"})}),"\n",(0,i.jsx)(n.p,{children:"This example shows how to connect an agent (e.g., chatbot, automation) to an MCP API using OpenAPI."}),"\n",(0,i.jsx)(n.h2,{id:"1-openapi-schema-for-agent",children:"1. OpenAPI Schema for Agent"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"openapi: 3.1.0\ninfo:\n  title: Agent Integration API\n  version: 1.0.0\npaths:\n  /agent/act:\n    post:\n      summary: Agent action\n      operationId: agentAct\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                action:\n                  type: string\n      responses:\n        '200':\n          description: Action result\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: string\n"})}),"\n",(0,i.jsx)(n.h2,{id:"2-agent-code-example-nodejs",children:"2. Agent Code Example (Node.js)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const fetch = require('node-fetch');\nasync function act(action) {\n  const res = await fetch('http://localhost:3000/agent/act', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ action })\n  });\n  const data = await res.json();\n  console.log('Agent result:', data.result);\n}\nact('greet');\n"})}),"\n",(0,i.jsx)(n.h2,{id:"3-api-handler-example",children:"3. API Handler Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"app.post('/agent/act', (req, res) => {\n  const { action } = req.body;\n  // Implement custom logic or call plugins\n  res.json({ result: `Action ${action} performed!` });\n});\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Use OpenAPI to describe agent actions and expected results. This enables auto-generation of SDKs and validation."})}),"\n",(0,i.jsx)(n.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://swagger.io/specification/",children:"OpenAPI Specification"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/la-rebelion",children:"Model Context Protocol (MCP)"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(6540);const i={},s=a.createContext(i);function o(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);