"use strict";(self.webpackChunkmcp_docs=self.webpackChunkmcp_docs||[]).push([[3022],{4648:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"components/runmcp/plugin-system","title":"Plugin System: RunMCP, OpenAPI, API-first","description":"Extend RunMCP with plugins for authentication, logging, monitoring, and custom logic in API-first, OpenAPI-driven workflows.","source":"@site/docs/3-components/runmcp/plugin-system.md","sourceDirName":"3-components/runmcp","slug":"/components/runmcp/plugin-system","permalink":"/components/runmcp/plugin-system","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"sidebar_label":"Plugin System","sidebar_class_name":"orange","title":"Plugin System: RunMCP, OpenAPI, API-first","description":"Extend RunMCP with plugins for authentication, logging, monitoring, and custom logic in API-first, OpenAPI-driven workflows.","keywords":["RunMCP","plugin system","OpenAPI","API-first","Model Context Protocol","MCP","extensibility","middleware","hooks"],"author":"La Rebelion Labs","publisher":"MCP Project","dateModified":"2025-07-27"},"sidebar":"tutorialSidebar","previous":{"title":"Scaling Instances","permalink":"/components/runmcp/scaling-instances"},"next":{"title":"API Reference","permalink":"/components/runmcp/api"}}');var s=i(4848),o=i(8453);const r={sidebar_position:5,sidebar_label:"Plugin System",sidebar_class_name:"orange",title:"Plugin System: RunMCP, OpenAPI, API-first",description:"Extend RunMCP with plugins for authentication, logging, monitoring, and custom logic in API-first, OpenAPI-driven workflows.",keywords:["RunMCP","plugin system","OpenAPI","API-first","Model Context Protocol","MCP","extensibility","middleware","hooks"],author:"La Rebelion Labs",publisher:"MCP Project",dateModified:"2025-07-27"},l="Plugin System: RunMCP, OpenAPI, API-first",a={},c=[{value:"Plugin Patterns",id:"plugin-patterns",level:2},{value:"Example: Registering a Plugin (YAML)",id:"example-registering-a-plugin-yaml",level:3},{value:"Example: Plugin Hook (JS)",id:"example-plugin-hook-js",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Further Reading",id:"further-reading",level:2}];function u(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"plugin-system-runmcp-openapi-api-first",children:"Plugin System: RunMCP, OpenAPI, API-first"})}),"\n",(0,s.jsx)(e.p,{children:"The RunMCP plugin system lets you add new features, integrations, and custom logic to your gateway without modifying core code."}),"\n",(0,s.jsx)(e.h2,{id:"plugin-patterns",children:"Plugin Patterns"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Authentication plugins:"})," Add OAuth, API key, or custom auth"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Logging and monitoring:"})," Integrate with observability tools"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Custom routing:"})," Add new routing rules or traffic shaping"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Hooks and middleware:"})," Run code before/after requests"]}),"\n"]}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsx)(e.p,{children:"Design plugins to be stateless and configurable for maximum reusability."})}),"\n",(0,s.jsx)(e.h3,{id:"example-registering-a-plugin-yaml",children:"Example: Registering a Plugin (YAML)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:'plugins:\n  - name: auth-oauth2\n    type: authentication\n    config:\n      clientId: "..."\n      clientSecret: "..."\n  - name: logging\n    type: logging\n    config:\n      provider: datadog\n'})}),"\n",(0,s.jsx)(e.h3,{id:"example-plugin-hook-js",children:"Example: Plugin Hook (JS)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"// Pseudocode for a plugin hook\ngateway.on('beforeRequest', (req, res, next) => {\n  // Custom logic here\n  next();\n});\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"caution",children:(0,s.jsx)(e.p,{children:"Test plugins in a staging environment before deploying to production. Misconfigured plugins can impact all traffic."})}),"\n",(0,s.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Document plugin APIs and configuration"}),"\n",(0,s.jsx)(e.li,{children:"Use versioning for plugins"}),"\n",(0,s.jsx)(e.li,{children:"Monitor plugin performance and errors"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/la-rebelion/run-mcp",children:"run-mcp source code"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://swagger.io/specification/",children:"OpenAPI Specification"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/la-rebelion",children:"Model Context Protocol (MCP)"})}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(u,{...n})}):u(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>l});var t=i(6540);const s={},o=t.createContext(s);function r(n){const e=t.useContext(o);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);