"use strict";(self.webpackChunkmcp_docs=self.webpackChunkmcp_docs||[]).push([[8531],{6095:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"components/qbot","title":"QBot - CLI MCP Client","description":"Natural\u2011language Terminal User Interface (TUI) to explore and use MCP tools from your CLI terminal. It features an interactive REPL (Read-Eval-Print Loop) prompt, command history, and LLM chat tool\u2011calling wired to your connected MCP server.","source":"@site/docs/3-components/qbot.md","sourceDirName":"3-components","slug":"/components/qbot","permalink":"/components/qbot","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Dumb vs Smart Agents","permalink":"/components/agents/dumb-vs-smart-agents"},"next":{"title":"Examples and Demos","permalink":"/examples/"}}');var l=o(4848),s=o(8453);const t={},c="QBot - CLI MCP Client",i={},d=[{value:"Quick start",id:"quick-start",level:2},{value:"Features",id:"features",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"qbot---cli-mcp-client",children:"QBot - CLI MCP Client"})}),"\n",(0,l.jsx)(n.p,{children:"Natural\u2011language Terminal User Interface (TUI) to explore and use MCP tools from your CLI terminal. It features an interactive REPL (Read-Eval-Print Loop) prompt, command history, and LLM chat tool\u2011calling wired to your connected MCP server."}),"\n",(0,l.jsx)(n.h2,{id:"quick-start",children:"Quick start"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://qbot.mcp.com.ai",children:"Install"})," or download from the ",(0,l.jsx)(n.a,{href:"https://github.com/la-rebelion/qbot-cli/releases",children:"releases page"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"Connect to your MCP server:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"qbot --url http://localhost:3000/mcp"})}),"\n",(0,l.jsxs)(n.p,{children:["Configure your LLM provider, model, and API key via commands (e.g. ",(0,l.jsx)(n.code,{children:"/llm provider groq"}),", ",(0,l.jsx)(n.code,{children:"/llm model llama-3.3-70b-versatile"}),", ",(0,l.jsx)(n.code,{children:"/llm key groq <GROQ_API_KEY>"}),"), or set them in ",(0,l.jsx)(n.code,{children:"~/.qbot/config.json"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Interactive REPL (",(0,l.jsx)(n.code,{children:"qbot>"})," prompt), history."]}),"\n",(0,l.jsxs)(n.li,{children:["MCP over HTTP: list/call tools, list/read resources, list/get prompts. ",(0,l.jsx)(n.code,{children:"stdio"})," and ",(0,l.jsx)(n.code,{children:"sse"})," transports not supported."]}),"\n",(0,l.jsx)(n.li,{children:"LLM chat via Abso with MCP tool\u2011calling (OpenAI\u2011tools compatible)."}),"\n",(0,l.jsxs)(n.li,{children:["Slash commands:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Core: ",(0,l.jsx)(n.code,{children:"/help"}),", ",(0,l.jsx)(n.code,{children:"/connect"}),", ",(0,l.jsx)(n.code,{children:"/status"}),", ",(0,l.jsx)(n.code,{children:"/tools"}),", ",(0,l.jsx)(n.code,{children:"/call"}),", ",(0,l.jsx)(n.code,{children:"/resources"}),", ",(0,l.jsx)(n.code,{children:"/read"}),", ",(0,l.jsx)(n.code,{children:"/prompts"}),", ",(0,l.jsx)(n.code,{children:"/prompt"}),", ",(0,l.jsx)(n.code,{children:"/history"}),", ",(0,l.jsx)(n.code,{children:"/log"}),", ",(0,l.jsx)(n.code,{children:"/run"}),", ",(0,l.jsx)(n.code,{children:"/exit"})]}),"\n",(0,l.jsxs)(n.li,{children:["Logging: ",(0,l.jsx)(n.code,{children:"/loglevel <debug|info|warn|error> [llm]"})," (sets global or LLM-only level)"]}),"\n",(0,l.jsxs)(n.li,{children:["LLM: ",(0,l.jsx)(n.code,{children:"/llm status"}),", ",(0,l.jsx)(n.code,{children:"/llm provider <openai|groq|openrouter|anthropic|ollama>"}),", ",(0,l.jsx)(n.code,{children:"/llm model <modelId>"}),", ",(0,l.jsx)(n.code,{children:"/llm key <provider> <apiKey>"}),", ",(0,l.jsx)(n.code,{children:"/llm base <provider> <baseUrl>"})]}),"\n",(0,l.jsxs)(n.li,{children:["Session: ",(0,l.jsx)(n.code,{children:"/reconnect"})," (confirm and auto-refresh), ",(0,l.jsx)(n.code,{children:"/refresh"})," (reload tools/resources/prompts)"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Safe shell runs: never auto\u2011exec, confirm before running."}),"\n",(0,l.jsxs)(n.li,{children:["Config at ",(0,l.jsx)(n.code,{children:"~/.qbot/config.json"})," (MCP headers, LLM provider/model/keys).","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Logging: ",(0,l.jsx)(n.code,{children:"logging.level"})," controls global logs; ",(0,l.jsx)(n.code,{children:"llm.logLevel"})," controls LLM pipeline logs. Levels: ",(0,l.jsx)(n.code,{children:"debug"}),", ",(0,l.jsx)(n.code,{children:"info"}),", ",(0,l.jsx)(n.code,{children:"warn"}),", ",(0,l.jsx)(n.code,{children:"error"}),"."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>c});var r=o(6540);const l={},s=r.createContext(l);function t(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);