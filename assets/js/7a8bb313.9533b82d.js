"use strict";(self.webpackChunkmcp_docs=self.webpackChunkmcp_docs||[]).push([[4420],{2206:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"components/hapi-server/openapi/schema-design","title":"Schema Design in HAPI Server: API-first, OpenAPI, and MCP","description":"Learn best practices for designing robust, maintainable schemas in HAPI server using OpenAPI and Model Context Protocol (MCP) principles.","source":"@site/docs/3-components/hapi-server/openapi/schema-design.md","sourceDirName":"3-components/hapi-server/openapi","slug":"/components/hapi-server/openapi/schema-design","permalink":"/components/hapi-server/openapi/schema-design","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"Schema Design","sidebar_class_name":"green","title":"Schema Design in HAPI Server: API-first, OpenAPI, and MCP","description":"Learn best practices for designing robust, maintainable schemas in HAPI server using OpenAPI and Model Context Protocol (MCP) principles.","keywords":["schema design","OpenAPI","MCP","HAPI server","API-first","validation","contract"],"author":"La Rebelion Labs","publisher":"MCP Project","dateModified":"2025-07-27"},"sidebar":"tutorialSidebar","previous":{"title":"OpenAPI Integration","permalink":"/components/hapi-server/openapi/"},"next":{"title":"Validation Layers","permalink":"/components/hapi-server/openapi/validation-layers"}}');var r=s(4848),t=s(8453);const a={sidebar_position:3,sidebar_label:"Schema Design",sidebar_class_name:"green",title:"Schema Design in HAPI Server: API-first, OpenAPI, and MCP",description:"Learn best practices for designing robust, maintainable schemas in HAPI server using OpenAPI and Model Context Protocol (MCP) principles.",keywords:["schema design","OpenAPI","MCP","HAPI server","API-first","validation","contract"],author:"La Rebelion Labs",publisher:"MCP Project",dateModified:"2025-07-27"},o="Schema Design: API-first, OpenAPI, and MCP",c={},d=[{value:"Principles of Good Schema Design",id:"principles-of-good-schema-design",level:2},{value:"Example: User Schema",id:"example-user-schema",level:2},{value:"Using Enums and Constraints",id:"using-enums-and-constraints",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Further Reading",id:"further-reading",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"schema-design-api-first-openapi-and-mcp",children:"Schema Design: API-first, OpenAPI, and MCP"})}),"\n",(0,r.jsx)(n.p,{children:"Schema design is the foundation of any API-first system. In HAPI, your OpenAPI schema defines not just endpoints, but also the structure, validation, and semantics of every request and response."}),"\n",(0,r.jsx)(n.h2,{id:"principles-of-good-schema-design",children:"Principles of Good Schema Design"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Explicitness:"})," Define all fields, types, and constraints clearly."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validation:"})," Use OpenAPI's built-in validation keywords (",(0,r.jsx)(n.code,{children:"type"}),", ",(0,r.jsx)(n.code,{children:"format"}),", ",(0,r.jsx)(n.code,{children:"enum"}),", ",(0,r.jsx)(n.code,{children:"pattern"}),", etc.)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reusability:"})," Use ",(0,r.jsx)(n.code,{children:"$ref"})," and ",(0,r.jsx)(n.code,{children:"components/schemas"})," to avoid duplication."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Extensibility:"})," Leverage OpenAPI extensions (e.g., ",(0,r.jsx)(n.code,{children:"x-hapi"}),") for MCP-specific needs."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"Design your schemas with future agents and tools in mind. Well-structured schemas make it easier for MCP-powered agents to reason about and use your API."})}),"\n",(0,r.jsx)(n.h2,{id:"example-user-schema",children:"Example: User Schema"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"components:\n  schemas:\n    User:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        email:\n          type: string\n          format: email\n        roles:\n          type: array\n          items:\n            type: string\n"})}),"\n",(0,r.jsx)(n.h2,{id:"using-enums-and-constraints",children:"Using Enums and Constraints"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"components:\n  schemas:\n    Status:\n      type: string\n      enum: [active, inactive, pending]\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["Avoid using overly generic types (like ",(0,r.jsx)(n.code,{children:"object"})," or ",(0,r.jsx)(n.code,{children:"any"}),"). This can make validation and documentation less effective."]})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"$ref"})," to share common models across endpoints."]}),"\n",(0,r.jsx)(n.li,{children:"Document all fields, even optional ones."}),"\n",(0,r.jsxs)(n.li,{children:["Use OpenAPI's ",(0,r.jsx)(n.code,{children:"description"})," fields for clarity."]}),"\n",(0,r.jsx)(n.li,{children:"Validate with tools like Swagger Editor or openapi-generator."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://swagger.io/specification/#schema-object",children:"OpenAPI Schema Object"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/la-rebelion/hapi-mcp",children:"HAPI MCP source code"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/la-rebelion",children:"Model Context Protocol (MCP)"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);