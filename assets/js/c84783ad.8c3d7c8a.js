"use strict";(self.webpackChunkmcp_docs=self.webpackChunkmcp_docs||[]).push([[1297],{8453:(e,a,t)=>{t.d(a,{R:()=>o,x:()=>c});var s=t(6540);const n={},i=s.createContext(n);function o(e){const a=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(i.Provider,{value:a},e.children)}},8712:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>z,contentTitle:()=>H,default:()=>Q,frontMatter:()=>T,metadata:()=>s,toc:()=>W});const s=JSON.parse('{"id":"servers-apis/openapi","title":"OpenAPI Specifications","description":"APIs provided by the HAPI Stack, these are non-official APIs but have been tested and are used in the MCP project.","source":"@site/docs/servers-apis/openapi.mdx","sourceDirName":"servers-apis","slug":"/servers-apis/openapi","permalink":"/servers-apis/openapi","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"OpenAPI Specifications","sidebar_position":1,"sidebar_label":"OpenAPI","description":"APIs provided by the HAPI Stack, these are non-official APIs but have been tested and are used in the MCP project.","keywords":["OpenAPI","API specifications","API documentation","API-first"],"author":"La Rebelion Labs","publisher":"MCP Project","dateModified":"2025-08-07"},"sidebar":"tutorialSidebar","previous":{"title":"Deployment Guide","permalink":"/deployment/"},"next":{"title":"Glossary","permalink":"/glossary"}}');var n=t(4848),i=t(8453),o=t(6540),c=t(4164);const r="apiCardsContainer_rXjv",l="summary_speF",d="cardsGrid_Eoot",p="apiCard_jK3w",h="cardHeader_mZLs",m="cardIcon_WabD",u="cardTitle_z6Ro",f="status_hFK1",x="version_aIW2",j="apiFormat_hiEW",v="cardDescription_z2xE",P="cardUrl_CdbT",b="urlText_XLpC",_="copyButton_BoAz",A="cardMetadata_VXb1",C="metadataItem_VWdS",y="cardActions_Swaz",I="actionButton_rc4a",w="deployButton_dEj8",k="viewButton_rkQQ",N="downloadButton_QqH4",g="dialogOverlay_Gp6F",M="dialogContent_tUMu",O="dialogHeader_Z5WQ",S="closeButton__khv",F="dialogBody_XDOM",L="codeBlock_PFN9",B="loading_mQfH",E="error_xCyU",R="empty_RRxW";var U=t(4586);const $=({isOpen:e,onClose:a,api:t,content:s})=>e&&t?(0,n.jsx)("div",{className:g,onClick:a,children:(0,n.jsxs)("div",{className:M,onClick:e=>e.stopPropagation(),children:[(0,n.jsxs)("div",{className:O,children:[(0,n.jsx)("h3",{children:t.title}),(0,n.jsx)("button",{onClick:a,className:S,children:"\xd7"})]}),(0,n.jsx)("div",{className:F,children:(0,n.jsx)("pre",{className:L,children:(0,n.jsx)("code",{children:s})})})]})}):null,D=({runMcpUrl:e="http://localhost:8080"})=>{const[a,t]=(0,o.useState)(null),[s,i]=(0,o.useState)(!0),[g,M]=(0,o.useState)(null),[O,S]=(0,o.useState)({isOpen:!1,api:null,content:""}),F=`${(0,U.A)().siteConfig.url}/apis/openapi`||"/apis/openapi";(0,o.useEffect)(()=>{(async()=>{try{const e=await fetch("/apis/openapi.json");if(!e.ok)throw new Error(`Failed to fetch API data: ${e.statusText}`);const a=await e.json();t(a)}catch(e){M(e instanceof Error?e.message:"Failed to load API data")}finally{i(!1)}})()},[]);const L=(0,o.useCallback)(async e=>{try{await navigator.clipboard.writeText(e)}catch(a){console.error("Failed to copy to clipboard:",a)}},[]),D=(0,o.useCallback)(e=>{if(0===e)return"0 B";const a=Math.floor(Math.log(e)/Math.log(1024));return`${parseFloat((e/Math.pow(1024,a)).toFixed(1))} ${["B","KB","MB","GB"][a]}`},[]),T=(0,o.useCallback)(e=>new Date(1e3*e).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"}),[]),H=(0,o.useCallback)(async e=>{try{const a=await fetch(`/apis/openapi/${e.filename}`);if(!a.ok)throw new Error(`Failed to fetch ${e.filename}`);const t=await a.text();S({isOpen:!0,api:e,content:t})}catch(a){console.error("Failed to load API content:",a)}},[]),z=(0,o.useCallback)(async e=>{try{const a=await fetch(`/apis/openapi/${e.filename}`);if(!a.ok)throw new Error(`Failed to fetch ${e.filename}`);const t=await a.text(),s=new Blob([t],{type:"json"===e.metadata.format?"application/json":"text/yaml"}),n=URL.createObjectURL(s),i=document.createElement("a");i.href=n,i.download=e.filename,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(n)}catch(a){console.error("Failed to download API file:",a)}},[]),W=(0,o.useCallback)(a=>{const t=`${e}?api=${encodeURIComponent(a)}`;window.open(t,"_blank")},[e]);return s?(0,n.jsx)("div",{className:B,children:"Loading API specifications..."}):g?(0,n.jsxs)("div",{className:E,children:["Error: ",g]}):a&&0!==a.apis.length?(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)("div",{className:r,children:[(0,n.jsxs)("div",{className:l,children:[(0,n.jsx)("h3",{children:"API Overview"}),(0,n.jsxs)("p",{children:["Total APIs: ",(0,n.jsx)("strong",{children:a.summary.total_apis})," | Total Endpoints: ",(0,n.jsx)("strong",{children:a.summary.total_endpoints})," | Last Updated: ",(0,n.jsx)("strong",{children:new Date(a.summary.generated_at).toLocaleDateString()})]})]}),(0,n.jsx)("div",{className:d,children:a.apis.map(e=>{const a=`${F}/${e.filename}`;return(0,n.jsxs)("div",{className:p,children:[(0,n.jsxs)("div",{className:h,children:[(0,n.jsx)("div",{className:m,children:(0,n.jsx)("img",{src:"/img/chatmcp/chatmcp-white.svg",alt:"ChatMCP Logo",style:{width:"40px",height:"40px"}})}),(0,n.jsxs)("div",{className:u,children:[(0,n.jsx)("h4",{children:e.title}),(0,n.jsx)("span",{className:(0,c.A)(f,x),children:e.version}),(0,n.jsx)("span",{className:(0,c.A)(f,j),children:e.metadata.format.toUpperCase()})]})]}),(0,n.jsx)("div",{className:v,children:(0,n.jsx)("p",{children:e.description.length>100?`${e.description.slice(0,100)}...`:e.description})}),(0,n.jsxs)("div",{className:P,children:[(0,n.jsx)("span",{className:b,children:a}),(0,n.jsx)("button",{onClick:()=>L(a),className:_,title:"Copy URL",children:"\ud83d\udccb"})]}),(0,n.jsxs)("div",{className:A,children:[(0,n.jsx)("div",{className:C,children:(0,n.jsxs)("span",{children:["Endpoints: ",e.endpoints]})}),(0,n.jsx)("div",{className:C,children:(0,n.jsxs)("span",{children:["Size: ",D(e.metadata.file_size)]})}),(0,n.jsx)("div",{className:C,children:(0,n.jsxs)("span",{children:["Modified: ",T(e.metadata.last_modified)]})}),(0,n.jsx)("div",{className:C,children:(0,n.jsxs)("span",{title:e.metadata.file_hash,children:["Hash: ",e.metadata.file_hash.substring(0,8),"..."]})})]}),(0,n.jsxs)("div",{className:y,children:[(0,n.jsx)("button",{onClick:()=>W(a),className:(0,c.A)(I,w),children:"Deploy"}),(0,n.jsx)("button",{onClick:()=>H(e),className:(0,c.A)(I,k),children:"View"}),(0,n.jsx)("button",{onClick:()=>z(e),className:(0,c.A)(I,N),children:"Download"})]})]},e.filename)})})]}),(0,n.jsx)($,{isOpen:O.isOpen,onClose:()=>S({isOpen:!1,api:null,content:""}),api:O.api,content:O.content})]}):(0,n.jsx)("div",{className:R,children:"No API specifications found."})},T={title:"OpenAPI Specifications",sidebar_position:1,sidebar_label:"OpenAPI",description:"APIs provided by the HAPI Stack, these are non-official APIs but have been tested and are used in the MCP project.",keywords:["OpenAPI","API specifications","API documentation","API-first"],author:"La Rebelion Labs",publisher:"MCP Project",dateModified:"2025-08-07"},H=void 0,z={},W=[{value:"OpenAPI Specifications",id:"openapi-specifications",level:2}];function G(e){const a={h2:"h2",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"openapi-specifications",children:"OpenAPI Specifications"}),"\n",(0,n.jsx)(a.p,{children:"The HAPI Stack provides a set of APIs that are essential for the Model Context Protocol (MCP) and other related functionalities. These APIs are documented using OpenAPI specifications, which allow for easy understanding and integration."}),"\n",(0,n.jsx)(D,{runMcpUrl:"https://run.mcp.com.ai"})]})}function Q(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(G,{...e})}):G(e)}}}]);