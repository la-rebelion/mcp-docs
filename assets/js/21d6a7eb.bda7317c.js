"use strict";(self.webpackChunkmcp_docs=self.webpackChunkmcp_docs||[]).push([[9551],{5858:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"components/hapi-server/grpc-idl/validation-layers","title":"Validation Layers in HAPI Server: MCP, Protobuf, API-first","description":"Explore the layered validation strategies in HAPI server, including Protobuf schema validation and Model Context Protocol (MCP) context enforcement for gRPC APIs.","source":"@site/docs/3-components/hapi-server/grpc-idl/validation-layers.md","sourceDirName":"3-components/hapi-server/grpc-idl","slug":"/components/hapi-server/grpc-idl/validation-layers","permalink":"/components/hapi-server/grpc-idl/validation-layers","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"sidebar_label":"Validation Layers (gRPC)","sidebar_class_name":"blue","title":"Validation Layers in HAPI Server: MCP, Protobuf, API-first","description":"Explore the layered validation strategies in HAPI server, including Protobuf schema validation and Model Context Protocol (MCP) context enforcement for gRPC APIs.","keywords":["validation","Protobuf","HAPI server","API-first","Model Context Protocol","MCP"],"author":"La Rebelion Labs","publisher":"MCP Project","dateModified":"2025-07-27"},"sidebar":"tutorialSidebar","previous":{"title":"Schema Design (gRPC)","permalink":"/components/hapi-server/grpc-idl/schema-design"},"next":{"title":"HAPI Server Routing Engine","permalink":"/components/hapi-server/routing-engine"}}');var t=n(4848),o=n(8453);const a={sidebar_position:4,sidebar_label:"Validation Layers (gRPC)",sidebar_class_name:"blue",title:"Validation Layers in HAPI Server: MCP, Protobuf, API-first",description:"Explore the layered validation strategies in HAPI server, including Protobuf schema validation and Model Context Protocol (MCP) context enforcement for gRPC APIs.",keywords:["validation","Protobuf","HAPI server","API-first","Model Context Protocol","MCP"],author:"La Rebelion Labs",publisher:"MCP Project",dateModified:"2025-07-27"},s="Validation Layers: MCP, Protobuf, API-first",l={},d=[{value:"Validation Layers in HAPI (gRPC)",id:"validation-layers-in-hapi-grpc",level:2},{value:"Example: Request Validation",id:"example-request-validation",level:3},{value:"Example: Security Validation",id:"example-security-validation",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Further Reading",id:"further-reading",level:2}];function c(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"validation-layers-mcp-protobuf-api-first",children:"Validation Layers: MCP, Protobuf, API-first"})}),"\n",(0,t.jsx)(i.p,{children:"HAPI server applies multiple layers of validation to every gRPC request and response, ensuring your system is robust, secure, and always in sync with your protobuf contract."}),"\n",(0,t.jsx)(i.h2,{id:"validation-layers-in-hapi-grpc",children:"Validation Layers in HAPI (gRPC)"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Schema Validation:"})," All data is validated against your protobuf message definitions (types, enums, etc.)."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Security Validation:"})," Authentication and authorization are enforced using MCP context and gRPC metadata."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Context Validation:"})," MCP context is checked for required fields and permissions."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Custom Validation:"})," Add hooks for business logic or additional checks as needed."]}),"\n"]}),"\n",(0,t.jsx)(i.admonition,{type:"tip",children:(0,t.jsx)(i.p,{children:"Use protobuf field options and enums for strong schema validation. Combine with MCP context checks for full coverage."})}),"\n",(0,t.jsx)(i.h3,{id:"example-request-validation",children:"Example: Request Validation"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-proto",children:"rpc CreateUser (User) returns (UserResponse);\n"})}),"\n",(0,t.jsx)(i.h3,{id:"example-security-validation",children:"Example: Security Validation"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-proto",children:"// Use gRPC metadata for API keys or tokens\n"})}),"\n",(0,t.jsx)(i.admonition,{type:"caution",children:(0,t.jsx)(i.p,{children:"If your schema and implementation drift, validation errors will occur. Always update your protobuf definitions when making changes to your API."})}),"\n",(0,t.jsx)(i.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Use tools like ",(0,t.jsx)(i.code,{children:"protoc"})," to validate your schema."]}),"\n",(0,t.jsx)(i.li,{children:"Test all RPCs with valid and invalid data."}),"\n",(0,t.jsx)(i.li,{children:"Use descriptive error messages for validation failures."}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://protobuf.dev/programming-guides/proto3/",children:"Protobuf Validation"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://github.com/la-rebelion/hapi-mcp",children:"HAPI MCP source code"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://github.com/la-rebelion",children:"Model Context Protocol (MCP)"})}),"\n"]})]})}function u(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>s});var r=n(6540);const t={},o=r.createContext(t);function a(e){const i=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(o.Provider,{value:i},e.children)}}}]);