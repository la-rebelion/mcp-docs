"use strict";(self.webpackChunkmcp_docs=self.webpackChunkmcp_docs||[]).push([[9501],{2645:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"components/hapi-server/openapi/known-issues","title":"Known Issues in HAPI Server OpenAPI Integration","description":"Learn about known issues and limitations in HAPI server OpenAPI integration, including MCP context handling, OpenAPI schema generation, and more.","source":"@site/docs/3-components/hapi-server/openapi/known-issues.md","sourceDirName":"3-components/hapi-server/openapi","slug":"/components/hapi-server/openapi/known-issues","permalink":"/components/hapi-server/openapi/known-issues","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"sidebar_label":"Known Issues","title":"Known Issues in HAPI Server OpenAPI Integration","description":"Learn about known issues and limitations in HAPI server OpenAPI integration, including MCP context handling, OpenAPI schema generation, and more.","keywords":["known issues","HAPI server","OpenAPI","MCP"],"author":"La Rebelion Labs","publisher":"MCP Project","dateModified":"2025-08-13"},"sidebar":"tutorialSidebar","previous":{"title":"Validation Layers","permalink":"/components/hapi-server/openapi/validation-layers"},"next":{"title":"Protobuf Integration","permalink":"/components/hapi-server/grpc-idl/"}}');var i=r(4848),s=r(8453);const o={sidebar_position:10,sidebar_label:"Known Issues",title:"Known Issues in HAPI Server OpenAPI Integration",description:"Learn about known issues and limitations in HAPI server OpenAPI integration, including MCP context handling, OpenAPI schema generation, and more.",keywords:["known issues","HAPI server","OpenAPI","MCP"],author:"La Rebelion Labs",publisher:"MCP Project",dateModified:"2025-08-13"},a="Known Issues in HAPI Server OpenAPI Integration",c={},l=[{value:"Cannot create route with parameter name conflict",id:"cannot-create-route-with-parameter-name-conflict",level:2},{value:"Snippet of OpenAPI Specification",id:"snippet-of-openapi-specification",level:3},{value:"Error:",id:"error",level:3},{value:"Cause",id:"cause",level:3},{value:"Solution",id:"solution",level:3},{value:"Please encode all non-ASCII characters",id:"please-encode-all-non-ascii-characters",level:2},{value:"Snippet of OpenAPI Specification",id:"snippet-of-openapi-specification-1",level:3},{value:"Error:",id:"error-1",level:3},{value:"Cause",id:"cause-1",level:3},{value:"Solution",id:"solution-1",level:3},{value:"JSON-RPC Error Response Format Issues",id:"json-rpc-error-response-format-issues",level:2},{value:"Error Scenario",id:"error-scenario",level:3},{value:"Standard JSON-RPC Error Format",id:"standard-json-rpc-error-format",level:3},{value:"Client Compatibility Problem",id:"client-compatibility-problem",level:3},{value:"Current Workaround",id:"current-workaround",level:3},{value:"Cause",id:"cause-2",level:3},{value:"Solution",id:"solution-2",level:3},{value:"Short-term Solution",id:"short-term-solution",level:4},{value:"Long-term Solution",id:"long-term-solution",level:4},{value:"Three-Legged OAuth (3LO) and <code>enableOpaqueOAuth</code> Feature Flag",id:"three-legged-oauth-3lo-and-enableopaqueoauth-feature-flag",level:2},{value:"Challenge with AI Agents",id:"challenge-with-ai-agents",level:3},{value:"Workaround: <code>enableOpaqueOAuth</code> Feature Flag",id:"workaround-enableopaqueoauth-feature-flag",level:3},{value:"Usage Flow",id:"usage-flow",level:4},{value:"Example",id:"example",level:4},{value:"Sequence Diagram",id:"sequence-diagram",level:4},{value:"Limitations",id:"limitations",level:4},{value:"Solution",id:"solution-3",level:4}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"known-issues-in-hapi-server-openapi-integration",children:"Known Issues in HAPI Server OpenAPI Integration"})}),"\n",(0,i.jsx)(n.p,{children:"HAPI server's OpenAPI integration is robust, but like any complex system, it has some known issues and limitations. This document outlines these issues to help you navigate them effectively."}),"\n",(0,i.jsx)(n.h2,{id:"cannot-create-route-with-parameter-name-conflict",children:"Cannot create route with parameter name conflict"}),"\n",(0,i.jsx)(n.p,{children:"When defining routes in HAPI server using OpenAPI specifications, you may encounter an error related to parameter name conflicts. This typically occurs when two routes share the same path but use different parameter names."}),"\n",(0,i.jsx)(n.h3,{id:"snippet-of-openapi-specification",children:"Snippet of OpenAPI Specification"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"openapi: 3.0.0\n# ... rest of the OpenAPI specification removed for brevity\npaths:\n  /background-checks:\n    get:\n      summary: Retrieve Background Checks\n      responses:\n        '200':\n          description: Successful retrieval of background checks\n        '401':\n          description: Unauthorized access\n        '404':\n          description: Background checks not found\n  /background-checks/{resourceId}/records:\n    get:\n      summary: Retrieve Background Check Records\n      parameters:\n        - name: resourceId          # <-- Ensure consistent parameter name here \ud83d\udc47\ud83c\udffd\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful retrieval of records\n        '400':\n          description: Bad request due to invalid parameters\n  /background-checks/{id}/pdf:\n    get:\n      summary: Retrieve Background Check PDF\n      parameters:\n        - name: id                  # <-- Ensure consistent parameter name here \ud83d\udc46\ud83c\udffd\n          in: path\n          required: true\n          schema:\n            type: string\n# ... rest of the OpenAPI specification removed for brevity\n"})}),"\n",(0,i.jsx)(n.h3,{id:"error",children:"Error:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'2025-08-13 19:42:35 [ERROR]: Failed to start server: Cannot create route "/background-checks/:resourceId/records" with parameter "resourceId" because a route already exists with a different parameter name ("id") in the same location\n2025-08-13 19:42:35 [ERROR]: Error: Cannot create route "/background-checks/:resourceId/records" with parameter "resourceId" because a route already exists with a different parameter name ("id") in the same location\n'})}),"\n",(0,i.jsx)(n.h3,{id:"cause",children:"Cause"}),"\n",(0,i.jsxs)(n.p,{children:["A path in the OpenAPI specification can be defined with static or dynamic parameters. For scenarios where the path is dynamic, such as ",(0,i.jsx)(n.code,{children:"/background-checks/{id}/records"}),", it is crucial to ensure that the parameter names in the OpenAPI specification for all dynamic paths in common are consistent, otherwise, it can lead to errors initializing the HAPI server or unexpected behavior during API calls."]}),"\n",(0,i.jsx)(n.p,{children:"For example, given two paths:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"/background-checks/{id}/records"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"/background-checks/{resourceId}/records"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If the OpenAPI specification defines these paths with different parameter names, it can lead to conflicts when HAPI server attempts to create routes. This is because HAPI server expects consistent parameter names across similar paths to avoid ambiguity in routing."}),"\n",(0,i.jsx)(n.h3,{id:"solution",children:"Solution"}),"\n",(0,i.jsxs)(n.p,{children:["To resolve this issue, ensure that all dynamic parameters in your OpenAPI specification are consistently named across similar paths. For instance, if you have a path like ",(0,i.jsx)(n.code,{children:"/background-checks/{id}/records"}),", ensure that any other path that refers to the same resource uses the same parameter name (",(0,i.jsx)(n.code,{children:"id"})," in this case)."]}),"\n",(0,i.jsx)(n.h2,{id:"please-encode-all-non-ascii-characters",children:"Please encode all non-ASCII characters"}),"\n",(0,i.jsx)(n.p,{children:"When working with OpenAPI specifications in HAPI server, it is important to ensure that all non-ASCII characters are properly encoded. This is particularly relevant for paths, parameters, and other elements that may contain special characters."}),"\n",(0,i.jsx)(n.h3,{id:"snippet-of-openapi-specification-1",children:"Snippet of OpenAPI Specification"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"openapi: 3.0.0\n# ... rest of the OpenAPI specification removed for\n\npaths:\n  /entities/{entityId}/datasources/mx/buro-de-credito/reports:\n    get:\n      tags:\n        - DS MX Bur\xf3 de Cr\xe9dito Reports                 # <-- Non-ASCII characters '\xe9' and '\xf3' in 'Bur\xf3 de Cr\xe9dito'\n      operationId: GetEntityMxBuroDeCreditoReports\n      summary: Get an entity's Bur\xf3 de Cr\xe9dito reports  # <-- Non-ASCII character '\xe9' and '\xf3' in 'Bur\xf3 de Cr\xe9dito'\n# ... rest of the OpenAPI specification removed for brevity\n"})}),"\n",(0,i.jsx)(n.h3,{id:"error-1",children:"Error:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'2025-08-14 07:31:30 [ERROR]: Failed to start server: Invalid route "/entities/:entityId/datasources/mx/buro-de-credito/reports". Please encode all non-ASCII characters in the path.\n2025-08-14 07:31:30 [ERROR]: TypeError: Invalid route "/entities/:entityId/datasources/mx/buro-de-credito/reports". Please encode all non-ASCII characters in the path.\n'})}),"\n",(0,i.jsx)(n.h3,{id:"cause-1",children:"Cause"}),"\n",(0,i.jsx)(n.p,{children:"The error occurs when the HAPI server encounters a route with non-ASCII characters in its path or it's underlying objects. HAPI server requires that all paths be encoded to ensure proper routing and handling of requests. Non-ASCII characters can lead to issues in URL parsing and routing, which is why they must be encoded."}),"\n",(0,i.jsx)(n.h3,{id:"solution-1",children:"Solution"}),"\n",(0,i.jsxs)(n.p,{children:["To resolve this issue, ensure that all non-ASCII characters in your OpenAPI specification are properly encoded. For example, if you have a path like ",(0,i.jsx)(n.code,{children:"/entities/:entityId/datasources/mx/buro-de-credito/reports"}),", you should encode the non-ASCII characters (like ",(0,i.jsx)(n.code,{children:"\xe9"}),") to their percent-encoded equivalents."]}),"\n",(0,i.jsx)(n.p,{children:"Other options include using Command-Line Tools:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"tr"})," command"]}),": This command can be used to delete characters outside the ASCII range."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"LC_ALL=C tr -dc '\\0-\\177' < input_file > output_file\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"LC_ALL=C: Ensures that character handling is based on the C locale, treating each byte as a distinct character, which is crucial for correct ASCII handling."}),"\n",(0,i.jsx)(n.li,{children:"-d: Deletes characters."}),"\n",(0,i.jsx)(n.li,{children:"-c: Complements the set of characters, meaning it considers characters not in the specified range."}),"\n",(0,i.jsx)(n.li,{children:"'\\0-\\177': Represents the octal range for ASCII characters (0 to 127)."}),"\n",(0,i.jsx)(n.li,{children:"< input_file: Specifies the input file."}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"output_file: Redirects the output to a new file."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"cat"})," and ",(0,i.jsx)(n.code,{children:"grep"})," command"]}),": These commands can be used together to filter out non-ASCII characters."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cat -v input_file.yaml | grep M-CM\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This command will display the contents of ",(0,i.jsx)(n.code,{children:"input_file.yaml"}),', replacing non-printable characters with their caret notation, and then filter lines containing "M-CM" to show only relevant lines with non-ASCII characters.']}),"\n",(0,i.jsx)(n.p,{children:"Using Programming Languages:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-Python",children:"    with open('input.txt', 'r', encoding='utf-8') as infile, \\\n         open('output.txt', 'w', encoding='ascii', errors='ignore') as outfile:\n        for line in infile:\n            outfile.write(line)\n"})}),"\n",(0,i.jsx)(n.p,{children:"This code reads the input file with UTF-8 encoding and writes to an output file with ASCII encoding, ignoring characters that cannot be encoded in ASCII.\nUsing Text Editors with Regular Expressions:"}),"\n",(0,i.jsxs)(n.p,{children:["Many advanced text editors like Notepad++, Sublime Text, or VS Code allow you to use regular expressions to find and replace non-ASCII characters. The specific regex might vary slightly between editors, but a common pattern is ",(0,i.jsx)(n.code,{children:"[^\\x00-\\x7F]"})," to match characters outside the ASCII range. You would then replace these matches with an empty string."]}),"\n",(0,i.jsx)(n.h2,{id:"json-rpc-error-response-format-issues",children:"JSON-RPC Error Response Format Issues"}),"\n",(0,i.jsxs)(n.p,{children:["When working with MCP (Model Context Protocol) over JSON-RPC, some clients (particularly tools like Postman and API inspectors) do not properly handle ",(0,i.jsx)(n.a,{href:"https://www.jsonrpc.org/specification#error_object",children:"JSON-RPC error"})," responses according to the specification. This leads to compatibility issues where errors are not displayed or processed correctly."]}),"\n",(0,i.jsx)(n.h3,{id:"error-scenario",children:"Error Scenario"}),"\n",(0,i.jsx)(n.p,{children:"The issue occurs when:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"A JSON-RPC request fails and generates an error"}),"\n",(0,i.jsxs)(n.li,{children:["The error should be returned in the standard JSON-RPC format with an ",(0,i.jsx)(n.code,{children:"error"})," field"]}),"\n",(0,i.jsxs)(n.li,{children:["Some clients (Postman, API inspectors) include the error as part of the ",(0,i.jsx)(n.code,{children:"result"})," field instead"]}),"\n",(0,i.jsx)(n.li,{children:"Developers testing the API cannot see the actual error details and get false positives"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"standard-json-rpc-error-format",children:"Standard JSON-RPC Error Format"}),"\n",(0,i.jsxs)(n.p,{children:["According to the ",(0,i.jsx)(n.a,{href:"https://www.jsonrpc.org/specification#error_object",children:"JSON-RPC 2.0 specification"}),", errors should be formatted as:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": "request-id",\n  "error": {\n    "code": -32603,\n    "message": "Internal error",\n    "data": "Additional error details"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"danger",children:(0,i.jsxs)(n.p,{children:["As per specs, the error ",(0,i.jsx)(n.a,{href:"https://www.jsonrpc.org/specification#response_object",children:"response"})," MUST include the ",(0,i.jsx)(n.code,{children:"error"})," field, and MUST NOT include the ",(0,i.jsx)(n.code,{children:"result"})," field."]})}),"\n",(0,i.jsx)(n.h3,{id:"client-compatibility-problem",children:"Client Compatibility Problem"}),"\n",(0,i.jsxs)(n.p,{children:["Some API testing tools and clients expect errors to be in the ",(0,i.jsx)(n.code,{children:"result"})," field instead of the ",(0,i.jsx)(n.code,{children:"error"})," field, or they don't properly display JSON-RPC errors. This creates a poor developer experience when testing MCP endpoints."]}),"\n",(0,i.jsx)(n.h3,{id:"current-workaround",children:"Current Workaround"}),"\n",(0,i.jsxs)(n.p,{children:["The current implementation includes a feature flag ",(0,i.jsx)(n.code,{children:"--dirty-jsonrpc"})," that, when enabled, returns errors in the ",(0,i.jsx)(n.code,{children:"result"})," field instead of the standard ",(0,i.jsx)(n.code,{children:"error"})," field:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": "request-id",\n  "result": {\n    "code": -32603,\n    "message": "Internal error",\n    "data": "Additional error details"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"cause-2",children:"Cause"}),"\n",(0,i.jsx)(n.p,{children:"The root cause is that some HTTP clients and API testing tools:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Don't implement full JSON-RPC 2.0 specification support"}),"\n",(0,i.jsxs)(n.li,{children:["Only look for data in the ",(0,i.jsx)(n.code,{children:"result"})," field"]}),"\n",(0,i.jsxs)(n.li,{children:["Don't have proper error handling for the ",(0,i.jsx)(n.code,{children:"error"})," field"]}),"\n",(0,i.jsx)(n.li,{children:"May not distinguish between HTTP-level errors and JSON-RPC-level errors"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"solution-2",children:"Solution"}),"\n",(0,i.jsx)(n.h4,{id:"short-term-solution",children:"Short-term Solution"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use the feature flag"}),": Enable ",(0,i.jsx)(n.code,{children:"--dirty-jsonrpc"})," in development environments when using incompatible clients:"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"long-term-solution",children:"Long-term Solution"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use proper JSON-RPC clients"}),": Switch to clients that properly support JSON-RPC 2.0:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use dedicated JSON-RPC client libraries"}),"\n",(0,i.jsx)(n.li,{children:"Implement custom MCP clients that follow the specification"}),"\n",(0,i.jsx)(n.li,{children:"Use command-line tools that support JSON-RPC properly"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This ensures backward compatibility while encouraging proper JSON-RPC implementation."}),"\n",(0,i.jsxs)(n.h2,{id:"three-legged-oauth-3lo-and-enableopaqueoauth-feature-flag",children:["Three-Legged OAuth (3LO) and ",(0,i.jsx)(n.code,{children:"enableOpaqueOAuth"})," Feature Flag"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://developer.atlassian.com/cloud/confluence/oauth-2-3lo-apps/",children:"Three-legged OAuth (3LO)"})," is an authorization flow within the OAuth 2.0 framework that involves three distinct parties: a client application (MCP Client or agent), a resource owner (user), and an authorization server/resource server, i.e.: LinkedIn, Facebook, Strava, etc.. This flow allows a third-party application to access a user's protected resources without the user sharing credentials directly."]}),"\n",(0,i.jsx)(n.h3,{id:"challenge-with-ai-agents",children:"Challenge with AI Agents"}),"\n",(0,i.jsx)(n.p,{children:"AI Agents and MCP Clients often face challenges interacting with user's protected resources, especially when the MCP client does not support the full OAuth authorization flow. In such cases, the agent cannot complete the 3LO flow natively."}),"\n",(0,i.jsxs)(n.h3,{id:"workaround-enableopaqueoauth-feature-flag",children:["Workaround: ",(0,i.jsx)(n.code,{children:"enableOpaqueOAuth"})," Feature Flag"]}),"\n",(0,i.jsxs)(n.p,{children:["To address this, the HAPI server provides the ",(0,i.jsx)(n.code,{children:"enableOpaqueOAuth"})," feature flag. When enabled, it exposes the ",(0,i.jsx)(n.code,{children:"/oauth2/opaque"})," endpoint, allowing users to manually share their access token with the MCP server. This enables MCP Clients/Agents to interact with protected resources on the user's behalf."]}),"\n",(0,i.jsx)(n.h4,{id:"usage-flow",children:"Usage Flow"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"The user authenticates with the authorization server and obtains an access token."}),"\n",(0,i.jsxs)(n.li,{children:["The user POSTs the access token to the ",(0,i.jsx)(n.code,{children:"/oauth2/opaque"})," endpoint on the HAPI server."]}),"\n",(0,i.jsx)(n.li,{children:"The MCP server stores the token and allows MCP Clients/Agents to use it for subsequent requests."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:'POST /oauth2/opaque\nContent-Type: application/json\n\n{\n  "state": "<state>",\n  "access_token": "<user_access_token>"\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"sequence-diagram",children:"Sequence Diagram"}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant User\n    participant AuthorizationServer\n    participant ResourceServer\n    participant MCPServer\n    participant MCPClient\n\n    User->>AuthorizationServer: Authenticate & grant access\n    AuthorizationServer--\x3e>User: Return access_token\n    User->>MCPServer: POST /oauth2/opaque {access_token, state}\n    MCPServer--\x3e>User: Store token, acknowledge\n    User<<--\x3e>MCPClient: Chat with AI Agent\n    MCPClient->>MCPServer: Request resource with state\n    MCPServer->>ResourceServer: Use access_token to access protected resource\n    ResourceServer--\x3e>MCPServer: Return protected resource\n    MCPServer--\x3e>MCPClient: Return resource data"}),"\n",(0,i.jsx)(n.h4,{id:"limitations",children:"Limitations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"This is a workaround for clients/agents that do not support the full OAuth flow."}),"\n",(0,i.jsx)(n.li,{children:"The access token must be handled securely and only shared with trusted MCP servers."}),"\n",(0,i.jsx)(n.li,{children:"This approach is not recommended for production unless absolutely necessary."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"solution-3",children:"Solution"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Enable the ",(0,i.jsx)(n.code,{children:"enableOpaqueOAuth"})," feature flag in development or integration environments where 3LO is required but not natively supported."]}),"\n",(0,i.jsx)(n.li,{children:"Prefer full OAuth 2.0 flows for production and compliant clients."}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"This workaround is essential for AI Agent scenarios where direct user interaction with OAuth flows is not feasible."})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);